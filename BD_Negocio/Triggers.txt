--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  TRIGGERS  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
CREATE TABLE CONTROL(
    USUARIO VARCHAR2(15),
    FECHA DATE, 
    ACCION VARCHAR2(30),
    TABLA VARCHAR(30),
    VALOR VARCHAR(30)
);
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ALTER TABLE EMPLOYEES MODIFY
(EMAIL VARCHAR2 (30) NULL);

--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
--1. Al insertar en la tabla de empleados, detectar si no pone el correo, se asigne automáticamente considerando el nombre y apellido
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
create or replace TRIGGER INSERTAR_EMPLEADOS 
BEFORE INSERT ON EMPLOYEES 
FOR EACH ROW 
WHEN(NEW.EMAIL IS NULL)
BEGIN 
    IF (:NEW.EMAIL IS NULL)THEN
        :NEW.EMAIL := SUBSTR(:NEW.FIRST_NAME,1,2)||SUBSTR(:NEW.LAST_NAME,1,3)||'@EMAIL.COM';
        INSERT INTO CONTROL VALUES (USER,SYSDATE,'INSERT', 'EMPLOYEES', ' ');
    END IF;
END;
--DROP TRIGGER INSERTAR_EMPLEADOS;
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
INSERT INTO EMPLOYEES VALUES(250,'CARLOS','ULIBARRI','',5555555555,SYSDATE,'AD_VP',5000,0.2,100,90);
SELECT * FROM EMPLOYEES;
SELECT * FROM CONTROL;
--DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID = 250;
--DELETE FROM CONTROL WHERE USUARIO = 'HR';
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

--2. Al insertar en la tabla de empleado detectar si el id esta repetido, asignar el máximo id + 1 y guardar el registro
create or replace TRIGGER DETECTAR_EMPLEADOS 
BEFORE INSERT ON EMPLOYEES
FOR EACH ROW 
DECLARE 
THESAMEID NUMBER;
NEWID NUMBER;
BEGIN
    SELECT MAX (EMPLOYEE_ID)INTO NEWID FROM EMPLOYEES;
    SELECT EMPLOYEE_ID INTO THESAMEID FROM EMPLOYEES WHERE EMPLOYEE_ID = :NEW.EMPLOYEE_ID OR (EMPLOYEE_ID <> :NEW.EMPLOYEE_ID AND 
    EMPLOYEE_ID = NEWID );
    IF (:NEW.EMPLOYEE_ID = THESAMEID)THEN
        NEWID := NEWID  + 1;
        :NEW.EMPLOYEE_ID := NEWID;
        INSERT INTO CONTROL VALUES (USER,SYSDATE,'INSERT', 'EMPLOYEES', '');
    ELSE 
        :NEW.EMPLOYEE_ID := :NEW.EMPLOYEE_ID;
    END IF;  
END;
--DROP TRIGGER DETECTAR_EMPLEADOS;
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
INSERT INTO EMPLOYEES VALUES(250,'CARLOS','HERRERA','CAR@GMAIL.COM',5555555555,SYSDATE,'AD_VP',5000,0.2,100,90);
SELECT * FROM EMPLOYEES ORDER BY EMPLOYEE_ID;
SELECT * FROM CONTROL;
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

--3. Al modificar el sueldo de un empleado, verificar que cumple con el mínimo de la tabla jobs y si no asignarle ese valor (mínimo de jobs)
create or replace TRIGGER SUELDO_EMPLEADOS 
BEFORE INSERT ON EMPLOYEES
FOR EACH ROW 
DECLARE
S_MIN NUMBER;
BEGIN
    SELECT MIN(MIN_SALARY)INTO S_MIN FROM JOBS;
    IF(:NEW.SALARY < S_MIN)THEN 
        :NEW.SALARY := S_MIN;
        INSERT INTO CONTROL VALUES (USER,SYSDATE,'INSERT', 'EMPLOYEES', ''); 
    END IF;
    
END;
--DROP TRIGGER SUELDO_EMPLEADOS;
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
INSERT INTO EMPLOYEES VALUES(252,'CARLOS','ULIBARRI','CARLOS@12',5555555555,SYSDATE,'AD_VP',1000,0.2,100,90);
SELECT * FROM EMPLOYEES ORDER BY EMPLOYEE_ID;
SELECT * FROM CONTROL;
--DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID = 254;
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

--4. Al agregar un empleado, evitar que se guarde si no tiene un departamento asignado
create or replace TRIGGER NO_DEP_EMPLEADOS 
AFTER INSERT ON EMPLOYEES
FOR EACH ROW
WHEN (NEW.DEPARTMENT_ID IS NULL)
BEGIN
        RAISE_APPLICATION_ERROR(-20001,'SE DEBE INGRESAR UN DEPARTMENT ID');
        INSERT INTO CONTROL VALUES (USER,SYSDATE,'INSERT', 'EMPLOYEES', ''); 
END;
--DROP TRIGGER NO_DEP_EMPLEADOS;
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
INSERT INTO EMPLOYEES VALUES(253,'CARLOS','ULIBARRI','CARLOS@1',5555555555,SYSDATE,'AD_VP',1000,0.2,100,'');
SELECT * FROM EMPLOYEES ORDER BY EMPLOYEE_ID;
SELECT * FROM CONTROL;
--DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID = ;
--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%