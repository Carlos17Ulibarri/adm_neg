--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  PROCEDIMIENTOS  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
--1. Mostrar todos los pedidos de un negocio
CREATE OR REPLACE PROCEDURE P_PEDIDOS_NEGOCIO (NEGOCIO IN OUT NEGOCIO.NEGOCIO_NOMBRE%TYPE, MP OUT SYS_REFCURSOR)AS
BEGIN 
    OPEN MP FOR 
    SELECT  NEGOCIO_NOMBRE, PEDIDO_ID,PEDIDO_FECHA_CREACION,PEDIDO_ESTATUS
    FROM PEDIDO
    JOIN DETALLE_PEDIDO ON DP_PEDIDO_ID = PEDIDO_ID
    JOIN PLATILLO ON DP_PLATILLO_ID = PLATILLO_ID
    JOIN NEGOCIO ON PLATILLO_NEGOCIO_ID = NEGOCIO_ID
    WHERE UPPER(NEGOCIO_NOMBRE) LIKE UPPER(NEGOCIO)
    ORDER BY PEDIDO_ID;
END P_PEDIDOS_NEGOCIO;



DECLARE 
    MP SYS_REFCURSOR;
    P_ID NUMBER;
    FECHA DATE;
    ESTATUS VARCHAR2(50);
    NEGOCIO VARCHAR2(50);
    BEGIN
        NEGOCIO := 'COCINA ECONOMICA';
        P_PEDIDOS_NEGOCIO(NEGOCIO,MP);
        LOOP
            FETCH MP INTO NEGOCIO,P_ID, FECHA, ESTATUS;
            EXIT WHEN MP%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(P_ID||'     '||FECHA ||'     '|| NEGOCIO ||'     '|| ESTATUS);
        END LOOP;
        CLOSE MP;
END;

--2. Mostrar todos los pedidos entregados por un repartidor
CREATE OR REPLACE PROCEDURE P_PEDIDOS_REPARTIDOR (R_N IN OUT REPARTIDOR.REPARTIDOR_NOMBRE%TYPE,R_AP IN OUT REPARTIDOR.REPARTIDOR_APELLIDOP%TYPE,R_AM IN OUT REPARTIDOR.REPARTIDOR_APELLIDOM%TYPE,PPR OUT SYS_REFCURSOR)AS
BEGIN  
    OPEN PPR FOR
    SELECT PEDIDO_ID,PEDIDO_FECHA_CREACION,REPARTIDOR_NOMBRE,REPARTIDOR_APELLIDOP,REPARTIDOR_APELLIDOM,PEDIDO_ESTATUS
    FROM PEDIDO
    JOIN REPARTIDOR ON PEDIDO_REPARTIDOR_ID = REPARTIDOR_ID
    JOIN DETALLE_PEDIDO ON DP_PEDIDO_ID = PEDIDO_ID
    JOIN PLATILLO ON DP_PLATILLO_ID = PLATILLO_ID
    WHERE UPPER(REPARTIDOR_NOMBRE) LIKE UPPER(R_N) AND UPPER(REPARTIDOR_APELLIDOP) LIKE UPPER(R_AP) AND UPPER(REPARTIDOR_APELLIDOM) LIKE UPPER(R_AM);
END P_PEDIDOS_REPARTIDOR;

DECLARE 
    PPR SYS_REFCURSOR;
    P_ID NUMBER;
    FECHA DATE;
    R_N VARCHAR2(50);
    R_AP VARCHAR2(50);
    R_AM VARCHAR2(50);
    ESTATUS VARCHAR2(50);
    BEGIN
        R_N := 'DANIEL';
        R_AP := 'ROSAS';
        R_AM := 'DIAZ';
        P_PEDIDOS_REPARTIDOR(R_N,R_AP,R_AM,PPR);
        LOOP
            FETCH PPR INTO P_ID, FECHA, R_N, R_AP,R_AM, ESTATUS;
            EXIT WHEN PPR%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(P_ID ||'   '|| FECHA ||'   '|| R_N ||'   '|| R_AP ||'   '|| R_AM ||'   '|| ESTATUS);
        END LOOP;
        CLOSE PPR;
END;

--3. ¿Cuál es el negocio que vende más?
CREATE OR REPLACE PROCEDURE P_NEGOCIO_GANANCIAS (PNG OUT SYS_REFCURSOR)AS
BEGIN
    OPEN PNG FOR 
        SELECT NEGOCIO_NOMBRE,SUM(((PLATILLO_COSTO*DP_CANTIDAD_PLATILLO))+PEDIDO_COSTO_ENVIO),SUM((((PLATILLO_COSTO*DP_CANTIDAD_PLATILLO))+PEDIDO_COSTO_ENVIO)*.20),SUM((((PLATILLO_COSTO*DP_CANTIDAD_PLATILLO))+PEDIDO_COSTO_ENVIO)-((((PLATILLO_COSTO*DP_CANTIDAD_PLATILLO))+PEDIDO_COSTO_ENVIO)*.20))
        FROM NEGOCIO 
        JOIN PLATILLO ON PLATILLO_NEGOCIO_ID = NEGOCIO_ID
        JOIN DETALLE_PEDIDO ON DP_PLATILLO_ID = PLATILLO_ID
        JOIN PEDIDO ON DP_PEDIDO_ID = PEDIDO_ID
        GROUP BY NEGOCIO_NOMBRE
        ORDER BY SUM((((PLATILLO_COSTO*DP_CANTIDAD_PLATILLO))+PEDIDO_COSTO_ENVIO)-((((PLATILLO_COSTO*DP_CANTIDAD_PLATILLO))+PEDIDO_COSTO_ENVIO)*.20)) DESC;
END P_NEGOCIO_GANANCIAS; 

DECLARE 
    PNG SYS_REFCURSOR;
    NEGOCIO VARCHAR2(50);
    COSTO_TOTAL_PEDIDOS NUMBER;
    GANANCIA_REPARTIDORES NUMBER;
    GANANCIA_NEGOCIO NUMBER;
    BEGIN
        P_NEGOCIO_GANANCIAS(PNG);
        LOOP
            FETCH PNG INTO NEGOCIO, COSTO_TOTAL_PEDIDOS, GANANCIA_REPARTIDORES,GANANCIA_NEGOCIO;
            EXIT WHEN PNG%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(NEGOCIO ||'   '|| COSTO_TOTAL_PEDIDOS ||'    '|| GANANCIA_REPARTIDORES ||'    '|| GANANCIA_NEGOCIO);
        END LOOP;
        CLOSE PNG;
END;

--4. ¿Cuál es el repartidor con más entregas?
CREATE OR REPLACE PROCEDURE P_REPARTIDOR_ENTREGAS (PRES OUT SYS_REFCURSOR)AS
BEGIN 
    OPEN PRES FOR
    SELECT REPARTIDOR_NOMBRE,REPARTIDOR_APELLIDOP,REPARTIDOR_APELLIDOM, COUNT(PEDIDO_ID) 
    FROM REPARTIDOR 
    JOIN PEDIDO ON PEDIDO_REPARTIDOR_ID = REPARTIDOR_ID
    GROUP BY REPARTIDOR_NOMBRE, REPARTIDOR_APELLIDOP,REPARTIDOR_APELLIDOM
    ORDER BY COUNT(PEDIDO_ID)  DESC;
END P_REPARTIDOR_ENTREGAS;

DECLARE 
    PRES SYS_REFCURSOR;
    R_N VARCHAR2(50);
    R_AP VARCHAR2(50);
    R_AM VARCHAR2(50);
    NO_E NUMBER;
    BEGIN
        P_REPARTIDOR_ENTREGAS(PRES);
        LOOP
            FETCH PRES INTO R_N, R_AP, R_AM,NO_E;
            EXIT WHEN PRES%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(R_N ||'   '|| R_AP ||'   '|| R_AM ||'   '|| NO_E);
        END LOOP;
        CLOSE PRES;
END;

   
--5. Mostrar la cantidad de pedidos por alcaldía
CREATE OR REPLACE PROCEDURE P_PEDIDOS_ALCALDIA (PPA OUT SYS_REFCURSOR)AS
BEGIN 
    OPEN PPA FOR
    SELECT DIRECCION_MUNICIPIO_ALCALDIA, COUNT(PEDIDO_ID) 
    FROM PEDIDO
    JOIN CLIENTE ON PEDIDO_CLIENTE_ID = CLIENTE_ID
    JOIN DIRECCION ON CLIENTE_DIRECCION_ID = DIRECCION_ID
    GROUP BY DIRECCION_MUNICIPIO_ALCALDIA
    ORDER BY COUNT(PEDIDO_ID) DESC;
END P_PEDIDOS_ALCALDIA;

DECLARE 
    PPA SYS_REFCURSOR;
    D_MA VARCHAR2(50);
    NO_P NUMBER;
    BEGIN
        P_PEDIDOS_ALCALDIA(PPA);
        LOOP
            FETCH PPA INTO D_MA, NO_P;
            EXIT WHEN PPA%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE(D_MA ||' '|| NO_P);
        END LOOP;
        CLOSE PPA;
END;


